@import './nav';
@import './button';


%border{
    border: 1px solid green;
    padding: 10px;

    &:focus{
        outline: none;
    }
}

input{
    @extend %border;
}

textarea{
    @extend %border;
}

// how to add operator and interpolation
$url: 'https://unapagina.com';

// mixins, definen reglas css configurables
@mixin border-radius($property){
    border-radius: $property;
}

// functions, definen logica que retornan valores
@function percentage($percent, $total){
    @return $percent * $total/100;
}

@mixin font-size($value){
    @if($value == small){
        font-size: 11px;
    }@else if($value == medium){
        font-size: 13px;
    }@else if($value == large){
        font-size: 15px;
    }@else{
        // @error "no valid value" $value;
        @warn "no valid value" $value;
    }
}

@mixin colors($value){
    @if($value == primary){
        color: red;
    }

    @if($value == secondary){
        color: green;
    }
}

body{
    background-image: url('#{$url}/imagen.jpg');
    padding: 10+10;
    @include border-radius(10px);
    height: percentage(50, 100)#{px};
    @include font-size(medium);
}

h1{
    @include colors(primary);
}

h2{
    @include colors(secondary);
}

// Data structures

// Lists
$font-sizes: 11px, 12px, 13px, 14px;

@each $size in $font-sizes {
    .size-#{$size}{
        font-size: $size;
    }
}

// Maps
$colors: (
    "primary": red,
    "secondary": blue,
    "complementary": green
);

@each $key, $value in $colors {
    .color-#{$key}{
        color: $value;
    }
};

@for $i from 1 through 10 {
    .font-size-#{$i}{
        font-size: $i#{px};
    }
};

$more-colors: (
    "other": yellow
);

@debug map-merge($colors, $more-colors);
@debug map-has-key($colors, secondary);